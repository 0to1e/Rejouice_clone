{"mappings":"AAAA,IAAI,oBAAoB,SAAS,cAAc,CAAC;AAChD,IAAI,UAAU,SAAS,cAAc,CAAC;AACtC,IAAI,oBAAoB,SAAS,cAAc,CAAC;AAChD,IAAI,UAAU,SAAS,cAAc,CAAC;AACtC,kBAAkB,gBAAgB,CAAC,aAAa,SAAU,GAAG;IAC3D,KAAK,EAAE,CAAC,YAAY;QAClB,GAAG,IAAI,CAAC;QACR,GAAG,IAAI,CAAC;IACV;AACF;AACA,kBAAkB,gBAAgB,CAAC,aAAa,SAAU,GAAG;IAC3D,KAAK,EAAE,CAAC,YAAY;QAClB,GAAG,IAAI,CAAC;QACR,GAAG,IAAI,CAAC;IACV;AACF;AAGA,MAAM,AAAC,CAAA,SAAS;IACd,KAAK,cAAc,CAAC;IAEpB,6FAA6F;IAE7F,MAAM,aAAa,IAAI,iBAAiB;QACtC,IAAI,SAAS,aAAa,CAAC;QAC3B,QAAQ;IACV;IACA,2FAA2F;IAC3F,WAAW,EAAE,CAAC,UAAU,cAAc,MAAM;IAE5C,oHAAoH;IACpH,cAAc,aAAa,CAAC,SAAS;QACnC,WAAU,KAAK;YACb,OAAO,UAAU,MAAM,GACnB,WAAW,QAAQ,CAAC,OAAO,GAAG,KAC9B,WAAW,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACzC;QACA;YACE,OAAO;gBACL,KAAK;gBACL,MAAM;gBACN,OAAO,OAAO,UAAU;gBACxB,QAAQ,OAAO,WAAW;YAC5B;QACF;QACA,8VAA8V;QAC9V,SAAS,SAAS,aAAa,CAAC,SAAS,KAAK,CAAC,SAAS,GACpD,cACA;IACN;IAEA,kGAAkG;IAClG,cAAc,gBAAgB,CAAC,WAAW,IAAM,WAAW,MAAM;IAEjE,wIAAwI;IACxI,cAAc,OAAO;AACvB,CAAA","sources":["script.js"],"sourcesContent":["var cursor1Background = document.getElementById(\"main\");\nvar cursor1 = document.getElementById(\"cursor1\");\nvar cursor2Background = document.getElementById(\"seats\");\nvar cursor2 = document.getElementById(\"cursor2\");\ncursor1Background.addEventListener(\"mousemove\", function (evt) {\n  gsap.to(\"#cursor1\", {\n    x: evt.x,\n    y: evt.y,\n  });\n});\ncursor2Background.addEventListener(\"mousemove\", function (evt) {\n  gsap.to(\"#cursor2\", {\n    x: evt.x,\n    y: evt.y,\n  });\n});\n\n\nTODO: (function locoScroll() {\n  gsap.registerPlugin(ScrollTrigger);\n\n  // Using Locomotive Scroll from Locomotive https://github.com/locomotivemtl/locomotive-scroll\n\n  const locoScroll = new LocomotiveScroll({\n    el: document.querySelector(\"#main\"),\n    smooth: true,\n  });\n  // each time Locomotive Scroll updates, tell ScrollTrigger to update too (sync positioning)\n  locoScroll.on(\"scroll\", ScrollTrigger.update);\n\n  // tell ScrollTrigger to use these proxy methods for the \"#main\" element since Locomotive Scroll is hijacking things\n  ScrollTrigger.scrollerProxy(\"#main\", {\n    scrollTop(value) {\n      return arguments.length\n        ? locoScroll.scrollTo(value, 0, 0)\n        : locoScroll.scroll.instance.scroll.y;\n    }, // we don't have to define a scrollLeft because we're only scrolling vertically.\n    getBoundingClientRect() {\n      return {\n        top: 0,\n        left: 0,\n        width: window.innerWidth,\n        height: window.innerHeight,\n      };\n    },\n    // LocomotiveScroll handles things completely differently on mobile devices - it doesn't even transform the container at all! So to get the correct behavior and avoid jitters, we should pin things with position: fixed on mobile. We sense it by checking to see if there's a transform applied to the container (the LocomotiveScroll-controlled element).\n    pinType: document.querySelector(\"#main\").style.transform\n      ? \"transform\"\n      : \"fixed\",\n  });\n\n  // each time the window updates, we should refresh ScrollTrigger and then update LocomotiveScroll.\n  ScrollTrigger.addEventListener(\"refresh\", () => locoScroll.update());\n\n  // after everything is set up, refresh() ScrollTrigger and update LocomotiveScroll because padding may have been added for pinning, etc.\n  ScrollTrigger.refresh();\n})();\n"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}